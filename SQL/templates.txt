CREATE TABLE "user"(
	user_id SERIAL PRIMARY KEY,
	"1c" JSONB, balance INT,
	access_lvl INT,
	"password" varchar(50),
	username varchar(50)
);

INSERT INTO "user"("1c", balance, access_lvl, "password", username)
VALUES ('{"username":"aa001", "test":"test"}'::jsonb, 100000, 0, '1111', 'aa001'),
       ('{"username":"aa002", "test":"test"}'::jsonb, 0, 5, '1111', 'aa002');

CREATE TABLE item(
	item_id SERIAL PRIMARY KEY,
	"name" varchar(150) NOT NULL,
	description varchar(500),
	price INT, photo_path varchar(150),
	is_available BOOL NOT NULL
);

CREATE TABLE in_cart_item(
	in_cart_item_id SERIAL PRIMARY KEY,
	cart_id INT REFERENCES cart(cart_id) ON DELETE CASCADE,
	item_id INT REFERENCES item(item_id) ON DELETE CASCADE,
	quantity INT NOT NULL);

ALTER TABLE in_cart_item ADD CONSTRAINT unique_constraint UNIQUE (item_id, cart_id);

CREATE TABLE cart(
	cart_id SERIAL PRIMARY KEY,
	user_id INT REFERENCES "user"(user_id) ON DELETE CASCADE,
	is_active BOOL, 
	"date" DATE
);

CREATE TABLE refresh_token(
	user_id INT UNIQUE REFERENCES "user"(user_id) ON DELETE CASCADE,
	refresh_token_id varchar(50) UNIQUE
);

CREATE VIEW in_active_cart_item AS
	(SELECT in_cart_item_id, in_cart_item.cart_id, item_id, quantity
	FROM in_cart_item
	JOIN cart ON in_cart_item.cart_id=cart.cart_id
	WHERE cart.is_active = true
);

CREATE TABLE place(
	place_id SERIAL PRIMARY KEY,
	name varchar(64),
	properties text
);

CREATE TABLE reservation(
	reservation_id SERIAL PRIMARY KEY,
	place_id int REFERENCES place(place_id) ON DELETE CASCADE,
	"start" timestamp,
	finish timestamp,
	user_id int REFERENCES "user"(user_id) ON DELETE CASCADE
);

CREATE VIEW place_and_reservation AS (
	SELECT reservation.place_id, place.name, place.properties, reservation.start, reservation.finish
 	FROM reservation
 	JOIN place ON reservation.place_id = place.place_id
);
